// TODO: Work out how to define a variable on the parent element for reuse on the children
// to reduce code
form(ng-model-options="{ getterSetter: true }")
    label Color
        div.width-100
            ul.forms-inline-list
                li
                    spectrum-colorpicker.colorpicker(
                        ng-model="getSetColorAsInteger(currentState[schemaName], schemaName)"
                        ng-change="sendUpdate(schemaName)"
                        options="{showInput: false, showAlpha: true, format: 'rgb'}"
                        )
                li
                    span &nbsp;
                li
                    span(ng-class="{'forms-desc': getLockedValues(schemaName).r}") r
                    input(size="3" ng-disabled="getLockedValues(schemaName).r" ng-model="currentState[schemaName].values.r" ng-change="sendUpdate(schemaName)")
                    span(ng-show="getLockedValues(schemaName).r").forms-desc.fa.fa-lock
                li
                    span(ng-class="{'forms-desc': getLockedValues(schemaName).g}") g
                    input(size="3" ng-disabled="getLockedValues(schemaName).g" ng-model="currentState[schemaName].values.g" ng-change="sendUpdate(schemaName)")
                    span(ng-show="getLockedValues(schemaName).g").forms-desc.fa.fa-lock
                li
                    span(ng-class="{'forms-desc': getLockedValues(schemaName).b}") b
                    input(size="3" ng-disabled="getLockedValues(schemaName).b" ng-model="currentState[schemaName].values.b" ng-change="sendUpdate(schemaName)")
                    span(ng-show="getLockedValues(schemaName).b").forms-desc.fa.fa-lock
                li
                    span(ng-class="{'forms-desc': getLockedValues(schemaName).a}") a
                    input(size="3" ng-disabled="getLockedValues(schemaName).a" ng-model="currentState[schemaName].values.a" ng-change="sendUpdate(schemaName)")
                    span(ng-show="getLockedValues(schemaName).a").forms-desc.fa.fa-lock
